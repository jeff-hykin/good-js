({comments, columnNames, rows}) is: {
  comments: Iterable {
    length: null,
    _source: AsyncGenerator {},
    map: [Function (anonymous)],
    filter: [Function (anonymous)],
    forkAndFilter: [Function (anonymous)],
    flat: [Function (anonymous)],
    check: [Function: isAComment],
    hitError: false,
    que: [],
    [Symbol(Symbol.asyncIterator)]: [Function: bound [Symbol.asyncIterator]],
    [Symbol(Symbol.isConcatSpreadable)]: true
  },
  columnNames: [],
  rows: <ref *1> Iterable {
    length: null,
    _source: {
      [Symbol(Symbol.iterator)]: [Function: [Symbol.iterator]],
      [Symbol(Symbol.asyncIterator)]: [Function (anonymous)]
    },
    map: [Function (anonymous)],
    filter: [Function (anonymous)],
    forkAndFilter: [Function (anonymous)],
    flat: [Function (anonymous)],
    rows: [Circular *1],
    comments: Iterable {
      length: null,
      _source: AsyncGenerator {},
      map: [Function (anonymous)],
      filter: [Function (anonymous)],
      forkAndFilter: [Function (anonymous)],
      flat: [Function (anonymous)],
      check: [Function: isAComment],
      hitError: false,
      que: [],
      [Symbol(Symbol.asyncIterator)]: [Function: bound [Symbol.asyncIterator]],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    columnNames: [],
    [Symbol(Symbol.iterator)]: [Function: bound [Symbol.iterator]],
    [Symbol(Symbol.asyncIterator)]: [Function: bound ],
    [Symbol(Symbol.isConcatSpreadable)]: true
  }
}
asyncIteratorToList(rows.map(each=>each.length)): [
  1,  1, 1, 1, 1, 1, 6,  2,
  6, 13, 4, 2, 4, 6, 5, 13,
  2,  1, 1, 1, 1, 1, 1,  1,
  1,  1
]
THE ERROR BELOW IS INTENTIONAL
Error: 
When calling parseCsv() some unrecognized arguments were given
so I'm guessing you may have misspelled something:
    for "seperator" maybe you meant: separator

        
    at parseCsv (file:///Users/jeffhykin/repos/good-js/source/csv.js:86:15)
    at file:///Users/jeffhykin/repos/good-js/tests/csv.js:23:47
    at eventLoopTick (ext:core/01_core.js:166:11)
